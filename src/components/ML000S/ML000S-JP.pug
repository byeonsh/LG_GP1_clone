extends ../_common/_layout.pug
include ../_common/_button.pug
include ../_common/_headline.pug
include ../_common/_forms.pug
include ../_common/_pop-msg.pug
include ../_common/_toast.pug

block meta 
  - var componentId = "ML000S"
  - var componentName = "配送先、請求先"
  - var description = "description text"
  - var keywords = "keyword list"
  title #{componentId}. #{componentName}
  meta(name="description" content=description)
  meta(name="keywords" content=keywords)

block styles
  link(rel="stylesheet" href=componentId+".css") 

mixin myMsg({infoText= false, correct= false, warning= false, check= false, warningFirst, infoTextSecond})
  if warningFirst
    - for(var i=0; i < warningFirst.length; i++)
      +invalid-warning(warningFirst[i])
  if correct
    - for(var i=0; i < correct.length; i++)
      +valid-msg(correct[i])
  if infoText
    ul.my-input__info 
      li.font-w-normal-14.font-m-normal-14!= infoText
  if warning !==  []
    - for(var i=0; i < warning.length; i++)
      +invalid-warning(warning[i])
  if check
    - for(var i=0; i < check.length; i++)
      +formCheckbox(check[i], "name", "val1", `checkId${i}`, count="false", false)
  if infoTextSecond
    ul.my-input__info 
      li.font-w-normal-14.font-m-normal-14= infoTextSecond

mixin myFormText(params)
  - let data = {...params}
  - let config = `${data.warning || data.warningFirst && !data.correct ? "my-warn" : ""}`
    .c-input-item(class=`${data.active ? "active" : ""}`)
      if data.label
        label.font-w-normal-16.font-m-normal-14(for= data.id class=`${data.info ? "my-info" : ""}`)= data.label
          if data.required
            em.c-required *
              span.sr-only Required fields
      if data.required && !data.button && !data.readonly
        input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value required)&attributes(attributes)
      else if data.readonly && data.required
        input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value readonly required)&attributes(attributes)
      else if data.readonly
        input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value readonly)&attributes(attributes)
      else if data.disabled
        input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value disabled required)&attributes(attributes)
      else if data.button
        if data.validation
          .input-button__container.input-button__container--validation
            .my-button-validation
              if data.disabled
                input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config disabled required)&attributes(attributes)
              else 
                input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config required)&attributes(attributes)
              +myMsg({correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
            .button.c-cta.button-full
              +defaultButton({name: data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: false})(class="js-pop-open", href="#findAddress")
        else
          .input-button__container
            if data.disabled
              input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config disabled required)&attributes(attributes)
            else 
              input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config required)&attributes(attributes)
            .button.c-cta.button-full
              +defaultButton({name: data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: false})(class="js-pop-open", href="#findAddress")
      else 
          input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder, value= data.value class=`my-input__password ${config}` class=`${data.search ? "my-form__search" : ""}`,)&attributes(attributes)
      if !data.validation
        +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
      else
        +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})

mixin myInputForm(data)
  .my-input
    ul
      each set in data
        li(class=`${!set.label ? 'empty-label':''}`)
          +myFormText(set)
          if(!!set.outlink)
            .bottom-area
              a.cmp-button.c-button.c-button--text-underline-outlink.black(target='_blank')
                span.cmp-button__text.c-button__text= set.outlink

mixin ML000S
  .c-wrapper.ML000S
    .component
      .fluid-container
        .my-component.my-page-title
          .c-text-contents.my-component__title-section
            .c-text-contents__headline
                +headline('font-w-light-56 font-m-light-28', "h2", "配送先、請求先")
        .my-component__wrap.border-only-web
          .my-component
            p.my-form-required.font-w-normal-16.font-m-normal-12
              em.c-required * 
                span.sr-only Required fields
              | Required fields
            .my-formbox
              +myInputForm([
                {
                  type:"text",
                  label:"氏名",
                  id:"lastName",
                  required:true,
                  placeholder:"姓",
                },
                {
                  type:"text",
                  label: false,
                  id:"firstName",
                  required:true,
                  placeholder:"名",
                  warning: ["First Name is required."]
                },
                {
                  type:"text",
                  label:"フリガナ",
                  id:"lastName2",
                  required:true,
                  placeholder:"姓",
                },
                {
                  type:"text",
                  label: false,
                  id:"firstName2",
                  required:true,
                  placeholder:"名",
                },
                {
                  type:"text",
                  label:"郵便番号",
                  id:"postcode",
                  required:false,
                  placeholder:"1048301(半角ハイフンなし)",
                  button: '郵便番号から住所を自動入力',
                  outlink: "郵便番号検索",
                },
                {
                  type:"text",
                  label:"住所",
                  id:"address",
                  required:false,
                  placeholder:"東京都(都・道・府・県) 中央区(市・区・町・村) 京橋2-1-3(丁目・番地・号)",
                },
                {
                  type:"text",
                  label: false,
                  id:"address4",
                  required: false,
                  placeholder:"LGタワー15F (建物名・部屋番号)",
                },
                {
                  type:"tel",
                  label:"携帯電話番号",
                  id:"MobileNumberWarn",
                  required:true,
                  placeholder:"Mobile Number",
                  warning: ["Enter up to 10 digits only."]
                },
              ])
              +toastPopup([
                {
                  type: "warning",
                  text: "It's the default shipping address",
                  remove: true
                },
                {
                  type: "warning",
                  text: "It's the default billing address",
                  remove: true
                }
              ])
          
            .button.c-cta.my-button
              // case 1. default btn
              +defaultButton({name: "キャンセル", wSize: "large", mSize: "medium", buttonStyle: 'default'})
              +defaultButton({name: "保存", wSize: "large", mSize: "medium", buttonStyle: 'highlight'})(disabled)
              // case 2. disabled btn
              // <a class="cmp-button c-button c-button--default highlight m-medium w-large" href="#" data-cmp-data-layer="" disabled="disabled" data-link-name="" data-link-destination="" data-link-menu="" data-link-page-type=""><span class="cmp-button__text c-button__text">Save</span></a>

block content
  // Component Markup
  +ML000S

block modal
  +pop-msg-standard({id : `findAddress`, headline:"住所選択", size:"full", headerBorder: false, classes:"buy-find-address"})
    .buy-find-address__form
      .buy-find-address__form__container
        +formRadio("宮城県 大崎市 鳴子温泉小身川原","name", "val1", "radioId1")
        +formRadio("宮城県 大崎市 鳴子温泉川袋","name", "val2", "radioId2")
        +formRadio("宮城県 大崎市 鳴子温泉木戸脇","name", "val3", "radioId3")
        +formRadio("宮城県 大崎市 鳴子温泉黒崎","name", "val4", "radioId4")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
        +formRadio("宮城県 大崎市 鳴子温泉小室山", "val5", "radioId5")
    .button.c-cta
      +defaultButton({name: '保存', wSize: 'medium', mSize: 'medium', buttonStyle: 'highlight', isButton: true})
