@charset "UTF-8";
@use '../../scss/abstract/' as *;
@use '../CS0000/CS0000' as *;

// component
$component: '.CS0018';

#{$component} {
  // variable
  $cs-header: '.c-cs-header';
  $text-contents: '.c-text-contents';

  $mobile-width: calc(100% - rem($margin25px * 2));

  &.bg-white,
  &.bg-lightgray,
  &.bg-darkgray,
  &.bg-black {
    .component {
      padding: 0;
      background-color: unset;
    }
    #{$component}__container {
      @include inset-padding-vt;
    }
  }

  &.bg-lightgray {
    #{$component}__container {
      background-color: $ivory8;
    }
  }

  &.bg-darkgray {
    #{$component}__container {
      background-color: $gray3;
    }
  }

  &.bg-black {
    #{$component}__container {
      background-color: $black;
    }
  }

  &__container {
    border-radius: $border8;
    @include flex-context;
    @include container($design-grid-full, true);
    @include screen(tablet) {
      @include inset-padding-hz;
    }
    @include inset-padding-hz(mobile);
    @include screen(web) {
      @include flex-context;
      padding-left: rem($padding25px);
      padding-right: rem($padding25px);
      position: relative;
    }

    @at-root #{$component} {
      .full #{$component}__container {
        padding-left: 0;
        padding-right: 0;

        #{$cs-header} {
          margin: rem(0 $margin25px);
          margin-bottom: rem($margin20px);

          @include screen(web) {
            margin-left: 0;
            margin-right: 0;
            margin-bottom: rem($margin40px);
          }
        }
      }
      .c-wide-full {
        #{$component}__container {
          max-width: none;
          padding: rem($padding16px);
          border-radius: 0;
          background-color: $light-gray3;

          @include screen(web) {
            padding: rem($padding40px $padding25px);
          }

          #{$text-contents} {
            @include container((columns(12)), false);
            padding: 0;
          }
        }
      }
    }
  }

  @at-root #{$component} {
    &.width-wide {
      max-width: 1920px;
      margin: 0 auto;
    }

    &.width-narrow {
      max-width: 1600px;
      margin: 0 auto;
    }

    &.width-content {
      max-width: 1440px;
      margin: 0 auto;
    }
  }
  // add class c-default-margin component
  &.c-default-margin {
    padding-bottom: rem($padding10px);

    &.c-wrapper {
      &.margin-top {
        margin-top: 0;
        padding-top: 0;
        padding-bottom: rem($padding30px);

        @include screen(web) {
          padding-bottom: rem($padding60px);
        }

        &.margin-bottom {
          padding-bottom: rem($padding30px);

          @include screen(web) {
            padding-bottom: rem($padding60px);
          }
        }
      }

      &.margin-bottom {
        @include screen(web) {
          padding-bottom: rem($padding10px);
        }
      }
    }

    #{$cs-header} {
      margin-top: rem($margin30px);
      margin-bottom: 0;

      @include screen(web) {
        margin-top: rem($margin40px);
      }
    }
  }
  // COMMON

  .c-cta {
    display: block;
    margin-top: rem($margin20px);
  }

  // Support HEADER
  #{$cs-header} {
    margin-bottom: rem($margin20px);

    a {
      color: $red;
      text-decoration: underline;
    }

    @include screen(web) {
      margin-bottom: rem($margin40px);
    }

    @at-root #{$component} #{$cs-header} {
      #{$text-contents} {
        text-align: center;
      }

      #{$text-contents}__headline + #{$text-contents}__bodycopy {
        margin-top: rem($margin6px);

        @include screen(web) {
          margin-top: rem($margin10px);
        }
      }
    }
  }

  .c-icon {
    &__text {
      #{$text-contents} {
        display: flex;
        flex-direction: column;
        padding: rem($padding13px);
        border-radius: rem($radius20);
        background-color: $light-gray3;
        word-break: break-word;
        .c-icon-box {
          display: inline-flex;
          gap: rem(20px 10px);
          margin-bottom: rem($margin10px);
          @include screen(web) {
            display: flex;
            align-items: center;
            gap: rem(22px);
          }
          .cmp-image {
            flex-shrink: 0;
            width: rem(63px);
            height: rem(63px);
            @include screen(web) {
              margin-bottom: 0;
            }
          }
          p {
            @include screen(web) {
              // text-align: left;
            }
          }
        }

        @include screen(web) {
          display: flex;
          align-items: center;
          justify-content: center;
          flex-direction: row;
          gap: rem(24px);
          padding: rem($padding24px);
          text-align: left;
          border-radius: rem($radius28);

          .c-icon-box {
            gap: rem(24px);
            margin-bottom: 0;
          }
        }
      }
    }
  }

  // theme
  &.bg-darkgray,
  &.bg-black {
    .component {
      color: $white;
    }

    .c-text-contents__bodycopy,
    .c-text-contents__list-item,
    .c-text-contents__quote-name {
      color: $white;
    }

    .c-text-contents li {
      &:before {
        background-color: $white;
      }
    }

    svg {
      // fill: green;
      // color: blue;
      stroke: white;

      path {
        fill: white !important;
        stroke: white !important;
        color: white;
      }
    }
  }

  // option - align
  &.align-left {
    .c-text-contents {
      justify-content: start;
    }
  }

  &.align-center {
    .c-text-contents {
      justify-content: center;
    }
  }
  &.width-narrow {
    .c-icon {
      &__text {
        #{$text-contents} {
          @include screen(web) {
            &__bodycopy {
              max-width: none;
            }
          }
        }
      }
    }
  }
}
