extends ../_common/_layout.pug
include ../_common/_button.pug
include ../_common/_headline.pug
include ../_common/_forms.pug
include ../_common/_pop-msg.pug

block meta 
    - var componentId = "ML000O"
    - var componentName = "Personal Information"
    - var description = "description text"
    - var keywords = "keyword list"
    title #{componentId}. #{componentName}
    meta(name="description" content=description)
    meta(name="keywords" content=keywords)

block styles
    link(rel="stylesheet" href=componentId+".css")

block scripts
    script(src=componentId+".js" type="module")

mixin myMsg({infoText= false, correct= false, warning= false, check= false, warningFirst, infoTextSecond})
    if warningFirst
        - for(var i=0; i < warningFirst.length; i++)
            +invalid-warning(warningFirst[i])
    if correct
        - for(var i=0; i < correct.length; i++)
            +valid-msg(correct[i])
    if infoText
        ul.my-input__info
            if (Array.isArray(infoText))
                each item in infoText
                    li.font-w-normal-16.font-m-normal-14!= item
            else
                li.font-w-normal-16.font-m-normal-14!= item
    if warning !==  []
        - for(var i=0; i < warning.length; i++)
            +invalid-warning(warning[i])
    if check
        - for(var i=0; i < check.length; i++)
            +formCheckbox(check[i], "name", "val1", `checkId${i}`, count="false", false)
    if infoTextSecond
        ul.my-input__info 
            li.font-w-normal-14.font-m-normal-14= infoTextSecond

mixin mySelect({optionVal=false, warning=false, label='', id='', infoText= false, placeholder='', warn=false, selected, required, disabled})
    .c-search-box__form(class=`${warning ? 'my-warn' : ''}`)
        +myFormSelect(label, id, placeholder, required, disabled)
            if optionVal
                - for(var i=0; i < optionVal.length; i++)
                    if selected === i + 1
                        option(value="" selected)= optionVal[i]
                    else
                        option(value="")= optionVal[i]
        if warning || infoText
            +myMsg({warning: warning, infoText: infoText})
            
mixin myFormSelect(label, id, placeholder, required, disabled)
    .c-select-item
        if label != ''
            label.font-w-normal-16.font-m-normal-14(for=`${id}` class={'sr-only' : labelSrOnly})= label
                if(required) 
                    +required-text-sr
        //- Bad value true for attribute required on element input.
        if required && disbled
            select(id=`${id}`, title=`${title}`, required="required" disabled="disabled")&attributes(attributes)
                if block
                    block
        else if disabled
            select(id=`${id}`, title=`${title}`, disabled="disabled")&attributes(attributes)
                if block
                    block       
        else if required
            select(id=`${id}`, title=`${title}`, required="required")&attributes(attributes)
                if block
                    block
        else
            select(id=`${id}`, title=`${title}`)&attributes(attributes)
                if block
                    block

//- mixin inquiryDetailPack(params)
//-     - let data = {...params}
//-     .my-infoBox__accordion
//-         .c-accordion.js-accordion
//-             .c-accordion__box.js-accordion-handle-target.c-accordion__box--expand
//-                 .c-accordion__head
//-                     // block - text contents
//-                     .c-accordion__head-text.c-text-contents
//-                         span.font-w-normal-32.font-m-normal-20.font-semibold(aria-hidden="true") !{data.title}
//-                     +trigger(params)
//-                 .c-accordion__body(id=`${data.controlsId}`)
//-                     if block
//-                         block
mixin trigger(params)
    - let data = {...params}
    .button
        button.cmp-button.c-accordion__button.js-accordion-trigger(aria-expanded="true" aria-controls=`${data.controlsId}` class=`${data.controlsId}`)
            span.c-accordion__button-text.expand.sr-only Expand
            span.c-accordion__button-text.collapse.sr-only Collapse

mixin myFormRadio(params)
    - let data = {...params}
    .c-form__box.c-form__radio-box
        each set in data
            .c-form-box
                .c-radio-item
                    label.radio(for=`${set.id}`)
                        input(type="radio" name=`${set.name}`, value=`${set.val}`, id=`${set.id}`)&attributes(attributes)
                        span.label= set.label                 

mixin myFormText(params)
    - let data = {...params}
    - let config = `${data.warning || data.warningFirst && !data.correct ? "my-warn" : ""}`
        //- 2023-05-24 Date of Birth
        if data.type === 'birth'
            +myBirth(params)
            if data.isRadio 
                .c-form__box.c-form__radio-box
                    .c-form-box
                        +formRadio("Natural Person","sort", "Natural Person", "Natural Person", "NaturalPerson")(aria-label="" checked)
                    .c-form-box
                        +formRadio("Legal Entity","sort", "Legal Entity", "Legal Entity", "LegalEntity")(aria-label="")
        else if data.type === 'birth1'
            +myBirth1(params)
        else if data.type === 'birth2'
            +myBirth2(params)
        else if data.type === 'select'
            .c-input-item(class=`${data.active ? "active" : ""}`)
                +mySelect({optionVal: data.optionVal, warning: data.warning, label: data.label, id: data.id, infoText: data.infoText, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required:data.required, disabled: data.disabled})
        else if data.type === 'radio'
            +myFormRadio(params)
        else
            .c-input-item(class=`${data.active ? "active" : ""}`)
                if data.label
                    label.font-w-normal-16.font-m-normal-14(for= data.id class=`${data.info ? "my-info" : ""}`)= data.label
                        if data.required
                            em.c-required *
                                span.sr-only Required fields
                if data.required && !data.button && !data.readonly && !data.disabled
                    if data.format
                        input(type= data.type id= data.id class="input-format" data-format= data.dataformat placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value)&attributes(attributes)
                    else
                        input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value required)&attributes(attributes)
                    if data.type === 'password'
                        button(type='button' class='my-form__eye')
                            span.sr-only show password
                else if data.readonly && data.required &&!data.button
                    input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value readonly required)&attributes(attributes)
                else if data.readonly && !data.button
                    input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value readonly)&attributes(attributes)
                else if data.disabled && data.required && !data.button
                    input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value disabled required)&attributes(attributes)
                else if data.disabled && !data.button
                    input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value disabled)&attributes(attributes)
                else if data.button
                    if data.validation
                        .input-button__container.input-button__container--validation
                            .my-button-validation
                                if data.readonly
                                    input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config readonly required)&attributes(attributes)
                                else if data.disabled
                                    input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config disabled required)&attributes(attributes)
                                else 
                                    input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config required)&attributes(attributes)
                                +myMsg({correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
                            .button.c-cta.button-full
                                +defaultButton({name: data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: false})(class="js-pop-open", href="#findAddress")
                    else
                        .input-button__container
                            if data.readonly
                                    input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config readonly required)&attributes(attributes)                           
                            else if data.disabled
                                input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config disabled required)&attributes(attributes)
                            else 
                                input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder value= data.value class=config required)&attributes(attributes)
                            .button.c-cta.button-full
                                +defaultButton({name: data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: false})(class="js-pop-open", href="#findAddress")
                else if data.format
                    input(type= data.type id= data.id class="input-format" data-format= data.dataformat placeholder= data.placeholder data-placeholder=data.placeholder class=config value= data.value)&attributes(attributes)
                else 
                    if data.active
                        input(type='text' id= data.id placeholder= data.placeholder data-placeholder= data.placeholder class=`my-input__password ${config}` value= data.value)&attributes(attributes)
                        if data.type === 'password'
                            button(type='button' class='my-form__eye')
                                span.sr-only show password
                        else if data.search 
                            button(type='button' class='my-form__search__icon')
                                span.sr-only search
                    else
                        input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder, value= data.value class=`my-input__password ${config}` class=`${data.search ? 'my-form__search' : ''}`,)&attributes(attributes)
                        if data.type === 'password'
                            button(type='button' class='my-form__eye')
                                span.sr-only show password
                        else if data.search 
                            button(type='button' class='my-form__search__icon')
                                span.sr-only search
            if !data.validation
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
            else
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})

//- mixin myFormText(params)
//-     - let data = {...params}
//-     - let config = `${data.warning || data.warningFirst ? 'my-warn' : ''}`
//-     if data.type === 'select'
//-         +mySelect({optionVal: data.optionVal, warning: data.warning, label: data.label, id: data.id, infoText: data.infoText, placeholder: data.placeholder, warn: data.warn, selected: data.selected})
//-     else
//-         .c-input-item(class=`${data.active ? 'active' : ''}`)
//-             if data.label
//-                 label.font-w-normal-16.font-m-normal-14(for= data.id class=`${data.info ? 'my-info' : ''}`)= data.label
//-                 input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder, value= data.value class=`my-input__password ${config}` class=`${data.search ? 'my-form__search' : ''}`,)&attributes(attributes)
//-                 if data.type === 'password'
//-                     button(type='button' class='my-form__eye')
//-                         span.sr-only show password
//-         if !data.validation 
//-             +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
//-         else
//-             +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})

mixin myInputForm(data)
    .my-input
        ul
            each set in data
                li
                    +myFormText(set)
//- 2023-05-24 Date of Birth (mm/dd/yyyy)
mixin myBirth(params)
    - let data = {...params}
        .c-input-item(class=`${data.active ? 'active' : ''}`)
            label.font-w-normal-16.font-m-normal-14(for= data.id class=`${data.info ? 'my-info' : ''}`)= data.label
                if data.required
                    em.c-required *
                        span.sr-only Required fields
            if data.validation
                .my-birth__container.my-birth__container--validation
                    .my-birth-validation
                        .my-birth__inner
                            +mySelect({optionVal: data.optionVal, warning: data.warning, id: data.id, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required: data.required})
                    .my-birth-validation
                        .my-birth__inner
                            input(type='text' id= data.id1 placeholder= data.placeholder1 data-placeholder= data.placeholder1 class=`${data.warning1 || data.warningFirst1 && !data.correct1 ? 'my-warn' : ''}` value= data.value1)&attributes(attributes)
                        +myMsg({correct: data.correct1, warning: data.warning1, check: data.check1, warningFirst: data.warningFirst1}) 
                    .my-birth-validation
                        .my-birth__inner
                            input(type='text' id= data.id2 placeholder= data.placeholder2 data-placeholder= data.placeholder2 class=`${data.warning2 || data.warningFirst2 && !data.correct2 ? 'my-warn' : ''}` value= data.value2)&attributes(attributes)                        
                        +myMsg({correct: data.correct2, warning: data.warning2, check: data.check2, warningFirst: data.warningFirst2})    
            else
                .my-birth__container
                    .my-birth__inner
                        +mySelect({optionVal: data.optionVal, warning: data.warning, id: data.id, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required: data.required})
                    .my-birth__inner
                        input(type='text' id= data.id1 placeholder= data.placeholder1 data-placeholder= data.placeholder1 class=`${data.warning1 || data.warningFirst1 && !data.correct1 ? 'my-warn' : ''}` value= data.value1)&attributes(attributes)
                    .my-birth__inner
                        input(type='text' id= data.id2 placeholder= data.placeholder2 data-placeholder= data.placeholder2 class=`${data.warning2 || data.warningFirst2 && !data.correct2 ? 'my-warn' : ''}` value= data.value2)&attributes(attributes)
            if !data.validation
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct3, warning: data.warning3, check: data.check3, warningFirst: data.warningFirst3})
            else
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})
mixin myBirth1(params)
    - let data = {...params}
        .c-input-item(class=`${data.active ? 'active' : ''}`)
            label.font-w-normal-16.font-m-normal-14(for= data.id class=`${data.info ? 'my-info' : ''}`)= data.label
                if data.required
                    em.c-required *
                        //- span.sr-only Required fields
            if data.validation
                .my-birth__container.my-birth__container--validation
                    .my-birth-validation
                        .my-birth__inner
                            input(type='text' id= data.id1 placeholder= data.placeholder1 data-placeholder= data.placeholder1 class=`${data.warning1 || data.warningFirst1 && !data.correct1 ? 'my-warn' : ''}` value= data.value1)&attributes(attributes)
                        +myMsg({correct: data.correct1, warning: data.warning1, check: data.check1, warningFirst: data.warningFirst1}) 
                    .my-birth-validation
                        .my-birth__inner
                            +mySelect({optionVal: data.optionVal, warning: data.warning, id: data.id, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required: data.required})                    
                    .my-birth-validation
                        .my-birth__inner
                            input(type='text' id= data.id2 placeholder= data.placeholder2 data-placeholder= data.placeholder2 class=`${data.warning2 || data.warningFirst2 && !data.correct2 ? 'my-warn' : ''}` value= data.value2)&attributes(attributes)                        
                        +myMsg({correct: data.correct2, warning: data.warning2, check: data.check2, warningFirst: data.warningFirst2})    
            else
                .my-birth__container
                    .my-birth__inner
                        input(type='text' id= data.id1 placeholder= data.placeholder1 data-placeholder= data.placeholder1 class=`${data.warning1 || data.warningFirst1 && !data.correct1 ? 'my-warn' : ''}` value= data.value1)&attributes(attributes)
                    .my-birth__inner
                        +mySelect({optionVal: data.optionVal, warning: data.warning, id: data.id, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required: data.required})                    
                    .my-birth__inner
                        input(type='text' id= data.id2 placeholder= data.placeholder2 data-placeholder= data.placeholder2 class=`${data.warning2 || data.warningFirst2 && !data.correct2 ? 'my-warn' : ''}` value= data.value2)&attributes(attributes)
            if !data.validation
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct3, warning: data.warning3, check: data.check3, warningFirst: data.warningFirst3})
            else
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})
//- 2023-05-24 Date of Birth (yyyy/mm/dd)
mixin myBirth2(params)
    - let data = {...params}
        .c-input-item(class=`${data.active ? 'active' : ''}`)
            label.font-w-normal-16.font-m-normal-14(for= data.id class=`${data.info ? 'my-info' : ''}`)= data.label
                if data.required
                    em.c-required *
                        span.sr-only Required fields
            if data.validation
                .my-birth__container.my-birth__container--validation
                    .my-birth-validation
                        .my-birth__inner
                            input(type='text' id= data.id2 placeholder= data.placeholder2 data-placeholder= data.placeholder2 class=`${data.warning2 || data.warningFirst2 && !data.correct2 ? 'my-warn' : ''}` value= data.value2)&attributes(attributes)                        
                        +myMsg({correct: data.correct2, warning: data.warning2, check: data.check2, warningFirst: data.warningFirst2})   
                    .my-birth-validation
                        .my-birth__inner
                            +mySelect({optionVal: data.optionVal, warning: data.warning, id: data.id, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required: data.required})
                    .my-birth-validation
                        .my-birth__inner
                            input(type='text' id= data.id1 placeholder= data.placeholder1 data-placeholder= data.placeholder1 class=`${data.warning1 || data.warningFirst1 && !data.correct1 ? 'my-warn' : ''}` value= data.value1)&attributes(attributes)
                        +myMsg({correct: data.correct1, warning: data.warning1, check: data.check1, warningFirst: data.warningFirst1})                      
            else
                .my-birth__container
                    .my-birth__inner
                        input(type='text' id= data.id2 placeholder= data.placeholder2 data-placeholder= data.placeholder2 class=`${data.warning2 || data.warningFirst2 && !data.correct2 ? 'my-warn' : ''}` value= data.value2)&attributes(attributes)
                    .my-birth__inner
                        +mySelect({optionVal: data.optionVal, warning: data.warning, id: data.id, placeholder: data.placeholder, warn: data.warn, selected: data.selected, required: data.required})
                    .my-birth__inner
                        input(type='text' id= data.id1 placeholder= data.placeholder1 data-placeholder= data.placeholder1 class=`${data.warning1 || data.warningFirst1 && !data.correct1 ? 'my-warn' : ''}` value= data.value1)&attributes(attributes)                   
            if !data.validation
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct3, warning: data.warning3, check: data.check3, warningFirst: data.warningFirst3})
            else
                +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})
mixin myAccountLinkedLoginList(params)
    - let data = {...params}
    .my-linkedlogin
        ul.my-linkedlogin__list
            each set in data
                li
                    a.my-linkedlogin__item(href='#' role="button" title=`${set.apps}` data-link-name="" data-link-destination="" data-link-menu="" data-link-page-type="")
                        .my-linkedlogin__container
                            span(class=`my-linkedlogin__ico my-linkedlogin__ico--${set.ico}`)= set.apps
                            .my-linkedlogin__desc(class=`${set.link ? 'my-linkedlogin__desc--linked' : '' }`)
                                .my-linkedlogin__link
                                    span.font-w-normal-16.font-m-semibold-14 !{set.link ? '切断する' : '接続'}
                        span.sr-only= set.apps
mixin ML000O
    .c-wrapper.ML000O
        .component
            .fluid-container
                .my-component__wrap
                    .my-component
                        .c-text-contents
                            .title.c-text-contents__headline.font-w-light-56.font-m-light-28
                                +headline('font-w-light-56 font-m-light-28', "h2", "Profile")
                            //- .text.c-text-contents__bodycopy.font-w-normal-24.font-m-normal-16
                            //-     p.cmp-text(data-cmp-data-layer="") Update your personal information to get personalized service and latest product information.
                .my-component.my-edit-profile
                    p.my-form-required.font-w-normal-16.font-m-normal-12
                        em.c-required * 
                            span.sr-only 入力必須欄
                        | 入力必須欄                
                    //- p.my-edit-profile-text.font-w-normal-12.font-m-normal-12 Update your personal information to get personalized service and latest product information.
                    .my-edit-profile__title サブメールアドレス
                    .my-edit-profile__box
                        +formCheckbox('修理や問い合わせの結果を、別のメールアドレスに送りたい。', "name", "val1", `checkId3`, count="false")
                        .my-formbox
                            +myInputForm([
                                {
                                    type:"text",
                                    label:"情報を受け取るためのEメールアドレス",
                                    id:"otherEmailAddress",
                                    required:true,
                                    infoText: ["今後、LGエレクトロニクスに関する様々なニュースをこのEメールアドレス宛に受信する。"],
                                    placeholder:"E メールを入力",
                                },
                            ])
                .my-component
                    .my-edit-profile__title ソーシャルメディアアカウント
                    .my-edit-profile__box
                        +myAccountLinkedLoginList([
                            {
                                href:"#",
                                ico:"apple",
                                apps:"Apple", 
                                link:false,
                            },
                            {
                                href:"#",
                                ico:"amazon",
                                apps:"Amazon", 
                                link:true,
                            },
                            {
                                href:"#",
                                ico:"google", 
                                apps:"Google", 
                                link:false,
                            },
                            {
                                href:"#",
                                ico:"facebook",
                                apps:"Facebook", 
                                link:true,
                            },
                        ])
                        .my-edit-profile__desc.font-w-normal-16.font-m-normal-14 プライバシーポリシーをお読みください。 
                            a(href="#" data-link-name="" data-link-destination="" data-link-menu="" data-link-page-type="").font-red プライバシーポリシー
                .my-component.my-topBorder 
                    //- .my-edit-profile__title Personal Information
                    //- +inquiryDetailPack({
                    //-     controlsId:"id1",
                    //-     title:"Personal Information",
                    //- })
                    .my-edit-profile__title 個人情報
                    .my-edit-profile__box
                        .my-formbox
                            +myInputForm([
                                {
                                    type:"text",
                                    label:"山田",
                                    id:"firstNameWarn",
                                    required:true,
                                    value:"Robert",
                                    warning: ["Please only use letters and spaces in this field."],
                                    placeholder:"山田",
                                },
                                {
                                    type:"text",
                                    label:"花子",
                                    id:"lastNameWarn",
                                    required:true,
                                    value:"Surrency",
                                    warning: ["Please only use letters and spaces in this field."],
                                    placeholder:"花子",
                                },
                                {
                                    type:"text",
                                    label:"ニックネーム",
                                    id:"nickname",
                                    required:false,  
                                    placeholder:"ニックネーム",
                                    warning: ["Please only use letters and spaces in this field."],
                                },
                                {
                                    type:"birth2",
                                    label:"生年月日",
                                    id:"month",
                                    id1:"day",
                                    id2:"year",                                                                  
                                    optionVal: ['月', '1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月 '],
                                    required:true,
                                    placeholder:"月",
                                    placeholder1:"日",
                                    placeholder2:"年",
                                    validation:false,
                                    warningFirst3:['You must be 14 years or older to create an account.'],
                                    infoText:['メールアドレスを忘れた場合は、生年月日で ID 認証を行います。', 'また、この生年月日により、本サービスのご利用年齢に当てはまるか確認させていただきます。'],
                                }, 
                                { 
                                    type:"tel",
                                    label:"電話番号",
                                    id:"telephoneNumber",
                                    required:false,
                                    placeholder:"0352994602",
                                    warningFirst: ["Not a valid phone number."],
                                    infoText:'Please enter the phone number without spaces.'
                                },
                                { 
                                    type:"tel",
                                    label:"携帯電話",
                                    id:"mobileNumber",
                                    required:false,
                                    placeholder:"09012341234",
                                    warningFirst: ["Not a valid phone number."],
                                    infoText:'Please enter the phone number without spaces.'
                                },
                                { 
                                    type:"text",
                                    label:"郵便番号",
                                    id:"postcode",
                                    required:true,
                                    placeholder:"1048301(半角ハイフンなし)"
                                },
                                { 
                                    type:"text",
                                    label:"都道府県",
                                    id:"address",
                                    required:true,
                                    placeholder:"東京都(都道府県)"
                                },
                                { 
                                    type:"text",
                                    label:"中央区[市・区・町・村]",
                                    id:"address2",
                                    required:true,
                                    placeholder:"中央区[市・区・町・村]"
                                },
                                { 
                                    type:"text",
                                    label:"ご住所 [丁・番地・号]",
                                    id:"address3",
                                    required:true,
                                    placeholder:"ご住所 [丁・番地・号]"
                                },
                                { 
                                    type:"text",
                                    label:"国",
                                    id:"countryNation",
                                    required:true,
                                    value: "日本",
                                    placeholder:"国",
                                    disabled:true
                                },
                            ])
                .my-component.my-topBorder
                    .my-edit-profile__box
                        .my-formbox
                            +myInputForm([
                                {
                                    type:"password",
                                    label:"パスワード",
                                    id:"CurrentPassword",
                                    required:true,
                                    placeholder:"パスワード",
                                },
                            ])
                    .button.c-cta.my-button
                        //- +defaultButton({name: "CANCEL", size: "large", roleButton:"true"})
                        +defaultButton({name: "キャンセル", wSize: 'large', mSize: 'medium', buttonStyle: 'default', isButton: true})
                        //- +defaultButton({type:"box", size: "large", color:"red", name:"Save", roleButton:"true"})
                        +defaultButton({name: "保存", wSize: 'large', mSize: 'medium', buttonStyle: 'highlight', isButton: true})
block content
    // Component Markup
    +ML000O

block modal
    .buy-find-address
        +pop-msg-standard({id : `findAddress`, headline:"Find address", size:"full"})
            .buy-find-address__form
                +formRadio("Savills,57 Buckingham Gate, ,London","name", "val1", "radioId1")
                +formRadio("Flat 1-6, 57 Buckingham Gate, ,London","name", "val2", "radioId2")
                +formRadio("58 Buckingham Gate, ,London","name", "val3", "radioId3")
                +formRadio("Cathy Pacific, Swire House, 59 Buckingham Gate, ,London","name", "val4", "radioId4")
                +formRadio("Savills,57 Buckingham Gate, ,London","name", "val5", "radioId5")
            .button.c-cta
                +defaultButton({type:"box", color:"red", name:'SAVE'})