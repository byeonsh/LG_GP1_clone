@charset "UTF-8";

@use 'sass:string';
@use '../../scss/abstract/' as *;

$component: '.PR0002';
#{$component} {
  @include lgness-margin('if-headline');
  // > .component > .cmp-container {
  //     @include container($design-grid-full, true);
  //     @include inset-padding-hz;
  // }
  // reset
  ul {
    @include reset-list-style;
  }
  .c-region-header {
    @include container($design-grid-full, true);
    @include inset-padding-hz;
    + .c-article-filter {
      margin-top: rem($margin12px);
      @include screen(web) {
        margin-top: rem($margin20px);
      }
    }
  }
  // block
  .c-article-filter {
    $filter: '.c-article-filter';
    @include container($design-grid-full, true);
    // @include screen(mobile) {
    //     border-bottom: rem($border1) solid $mid-gray1;
    // }
    @include screen(web) {
      @include inset-padding-hz;
    }
    @include screen(custom, rem($design-grid-full), max) {
      // padding-left: rem($block-margin-w);
      // padding-right: rem($block-margin-w);
      // @include screen(mobile) {
      //     padding-left: 0;
      //     padding-right: 0;
      // }
    }

    // element
    &__inner {
      position: relative;
      + #{$filter}__inner {
        margin-top: rem($margin20px);
        @include screen(web) {
          margin-top: rem($margin30px);
        }
      }
      &--tag {
        @include screen(mobile) {
          padding: rem(0 $padding32px);
        }
        // @include screen(web) {
        //     padding: rem(0 $padding34px);
        // }
        #{$filter}__scroll {
          @include screen(web) {
            scrollbar-width: none;
            &::-webkit-scrollbar {
              display: none;
            }
          }
        }
      }
    }
    &__scroll {
      overflow-y: hidden;
      overflow-x: auto;
      text-align: center;
    }
    &__category {
      display: flex;
      gap: rem($margin24px);
      @include screen(mobile) {
        padding: rem(0 $block-margin-m);
      }
      @include screen(web) {
        gap: rem($margin40px);
      }
      #{$filter}__button {
        font-size: rem(16px);
        font-weight: $font-semibold;
        border: 0;
        padding: 0;
        color: $gray3;
        @include screen(web) {
          font-size: rem(20px);
        }
        &:hover,
        &:focus-visible {
          color: $black;
        }
        &.active {
          color: $active-red;
          text-decoration: underline;
        }
      }
    }
    &__tag {
      display: flex;
      gap: rem($margin6px);
      @include screen(web) {
        gap: rem($margin10px);
      }
      #{$filter}__button {
        font-size: rem(14px);
        border: rem($border1) solid $mid-gray2;
        border-radius: $radius99;
        padding: rem($padding12px $padding20px);
        color: $black;
        @include screen(web) {
          padding: rem($padding12px $padding24px);
          font-weight: $font-semibold;
          &:hover,
          &:focus-visible {
            border-color: $active-red;
          }
        }
        &.active {
          border-color: $active-red;
        }
      }
    }
    &__button {
      cursor: pointer;
      line-height: 1;
      background-color: transparent;
      white-space: nowrap;
    }
    &__btn-scroll {
      position: absolute;
      top: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      width: rem($width32px);
      height: rem($height40px);
      border: 0;
      background-color: transparent;
      padding: 0;
      cursor: pointer;
      @include screen(web) {
        width: rem($icon18px);
      }
      &::before {
        content: '';
        display: block;
        width: rem($icon7px);
        height: rem($icon12px);
        background-size: 100% auto;
        background-image: url($icon-arrow-gray3-right-7-12);
        background-repeat: no-repeat;
        transform: none #{'/*!rtl:rotate(#{$degree180})*/'}; /*! RTL last keep colon */
        @include screen(web) {
          width: rem($icon10px);
          height: rem($icon18px);
          background-image: url($icon-arrow-gray3-right-10-18);
        }
      }
      &--left {
        @include screen(web) {
          left: rem($margin8px);
        }
        @include screen(custom, rem($design-grid-full), max) {
          left: 0;
        }
        @include screen(mobile) {
          border-right: rem($border1) solid $mid-gray1;
        }
        &::before {
          transform: rotate($degree180) #{'/*!rtl:none*/'}; /*! RTL last keep colon */
        }
      }
      &--right {
        @include screen(web) {
          right: rem($margin8px);
        }
        @include screen(custom, rem($design-grid-full), max) {
          right: 0;
        }
        @include screen(mobile) {
          border-left: rem($border1) solid $mid-gray1;
        }
      }
      &:disabled {
        display: none;
      }
    }
  }
  .c-explore-list {
    // element
    &__item {
      // ...
    }
    &__item-container {
      // ...
    }
    &__item-linker {
      display: block;

      // variation
      &:focus-visible {
        .c-explore-list__image {
          outline: rem($border1) solid currentcolor;
          outline-offset: rem($border1 * -2);
          @include lgness-radius('default');
        }

        $in-the-text-box: '#{$component} .c-explore-list__text .c-explore-list__item-linker:focus-visible';
        @at-root #{$in-the-text-box} {
          position: relative;
        }
      }
    }
    &__thumbnail {
      position: relative;
      overflow: hidden;
      @include lgness-radius('default');

      $padding-box: '&:before';

      #{$padding-box} {
        content: '';
        display: block;
        background-color: $ivory8;
      }
    }
    &__text {
      // block
      .c-text-contents__bodycopy {
        @include screen(mobile) {
          display: none;
        }
      }
    }
    &__video-article {
      position: absolute;
      top: rem($margin8px);
      left: rem($margin8px);
      display: flex;
      width: rem($width32px);
      height: rem($height32px);
      align-items: center;
      justify-content: center;
      background: rgba($black, 0.5);
      border-radius: $radius-full;
      z-index: $z-index1;
      @include screen(web) {
        width: rem($width44px);
        height: rem($height44px);
      }
      &:before {
        content: '';
        display: inline-block;
        background : {
          image: url($icon-video-white-16-16);
          position: 100% center;
          size: 100%;
          repeat: no-repeat;
        }
        width: rem($icon16px);
        height: rem($icon16px);
        @include screen(web) {
          width: rem($icon24px);
          height: rem($icon24px);
          background-image: url($icon-video-white-24-24);
        }
      }
    }

    &__image {
      // ...
    }
    &__text {
      // ...
    }
  }
  .c-text-contents {
    // element
    // &__eyebrow {
    //     color: $active-red;
    // }
    &__headline,
    &__bodycopy {
      @include ellipsis(2);
    }
    &__date {
      color: $mid-gray2;
    }
  }
  .c-list-more {
    // ...
  }

  // layout
  $list: '.c-explore-list';
  $badge: '.c-badge';
  $text: '.c-text-contents';
  $cta: '.c-cta';
  $filter: '.c-article-filter';
  $more: '.c-list-more';

  // margin... common
  #{$filter} + #{$list} {
    margin-top: rem($margin12px);
    @include screen(web) {
      margin-top: rem($margin20px);
    }
  }
  #{$list}__thumbnail + #{$list}__text #{$list}__item-linker {
    padding-top: rem($padding12px);
    @include screen(web) {
      padding-top: rem($padding20px);
    }
  }
  * + #{$cta} {
    margin-top: rem($margin12px);
    @include screen(web) {
      margin-top: rem($margin24px);
    }
  }

  #{$more} {
    border-top: rem($border1) solid $mid-gray1;
    padding-top: rem($padding16px);
    margin-top: rem($margin16px);
    @include screen(web) {
      padding-top: rem($padding32px);
      margin-top: rem($margin40px);
    }
  }

  // variation
  &.type1,
  &.type2 {
    #{$list}__image {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: {
        size: cover;
        repeat: no-repeat;
        position: 50% 50%;
      }
    }
  }
  &.type2,
  &.type3 {
    $side-margin-m: rem($margin15px);

    #{$list},
    #{$more} {
      @include inset-padding-hz;
      // padding-left: $side-margin-m;
      // padding-right: $side-margin-m;
      @include screen(web) {
        @include container($max-width1800px, true);
        // padding-left: rem($block-margin-w);
        // padding-right: rem($block-margin-w);
      }
    }
    #{$text}__eyebrow + #{$text}__headline {
      margin-top: rem($margin8px);
    }
    #{$text}__headline + #{$text}__bodycopy {
      margin-top: rem($margin6px);
    }
    * + #{$text}__date {
      margin-top: rem($margin8px);
      @include screen(web) {
        margin-top: rem($margin6px);
      }
    }
    #{$more} {
      @include screen(mobile) {
        margin-left: $side-margin-m;
        margin-right: $side-margin-m;
      }
    }
  }
  &.type1 {
    #{$text} {
      > * + * {
        margin-top: rem($margin8px);
      }
      > * + .c-text-contents__date {
        @include screen(web) {
          margin-top: rem($margin12px);
        }
      }
    }

    $image-map: (
      1: 442px,
      2: 442px,
      3: 595px /* width:952 */,

      4: 442px,
      5: 442px,
      6: 595px /* width:952 */,

      7: 442px,
      8: 442px,
    );

    #{$list} {
      @include container($design-grid-full, true);
      @include inset-padding-hz;
      display: flex;
      flex-direction: column;
      gap: rem($margin40px);
      @include screen(web) {
        flex-flow: row wrap;
        gap: rem($margin48px $gutter-w);
      }
      &__item {
        @include screen(web) {
          flex-basis: calc(50% - rem($gutter-w * 0.5));
          // min-width: calc(50% - rem($gutter-w * 0.5));
          // max-width: calc(50% - rem($gutter-w * 0.5));
        }
        &.repeat-order3,
        &.repeat-order6 {
          min-width: 100%;
          #{$list}__item-container {
            @include screen(web) {
              display: flex;
              align-items: center;
              column-gap: rem($gutter-w);
            }
          }
          #{$list}__thumbnail {
            @include screen(mobile) {
              border-radius: 0;
            }
          }
          #{$list}__text #{$list}__item-linker {
            max-width: 100%;
          }
        }
        &.repeat-order3 #{$list}__item-container {
          @include screen(web) {
            flex-direction: row #{'/*!rtl:row-reverse*/'}; /*! RTL last keep colon */
          }
        }
        &.repeat-order6 #{$list}__item-container {
          @include screen(web) {
            flex-direction: row-reverse #{'/*!rtl:row*/'}; /*! RTL last keep colon */
          }
        }
      }
      &__text {
        #{$list}__item-linker {
          @include screen(web) {
            max-width: min(rem($text-box-width-sm), $text-box-width-sm / columns(6, false) * 100%);
          }
        }
      }
      &__item-container {
        // ...
      }
      &__thumbnail {
        @at-root #{$component}.type1 {
          @each $i, $h in $image-map {
            $selector: '#{$list}__item.repeat-order#{$i}';

            @if $i % 3 == 0 {
              #{$selector} #{$list}__item-container {
                @include screen(web) {
                  column-gap: rem($gutter-w);
                }
              }
              #{$selector} #{$list}__thumbnail {
                @include screen(mobile) {
                  margin-left: rem($block-margin-m * -1);
                  margin-right: rem($block-margin-m * -1);
                }
                @include screen(web) {
                  min-width: min(rem(columns(8, false)), columns(8, false) / $design-grid-full * 100%);
                }
              }
            }
            #{$selector} #{$list}__thumbnail:before {
              @if $i % 3 == 0 {
                padding-bottom: calc($h / columns(8, false) * 100%);
              } @else {
                padding-bottom: calc($h / columns(6, false) * 100%);
              }
            }
          }
        }
      }
    }
  }
  &.type2 {
    $image-map: (
      1: 390,
      2: 660,
      3: 550 /* width:890 */,

      4: 510,
      5: 800 /* banner : 955 > 800 */,
      6: 485,

      7: 485,
      8: 800 /* banner : 955 > 800 */,

      9: 500 /*width:890*/,
      10: 590,
      11: 295,
    );

    #{$list} {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      gap: rem($margin30px $margin10px);
      @include screen(web) {
        gap: rem($margin50px $margin20px);
      }
      > li {
        @include screen(web) {
          flex-basis: calc(50% - rem($margin20px * 0.5));
          // min-width: calc(50% - rem($margin20px * 0.5));
          // max-width: calc(50% - rem($margin20px * 0.5));
        }
        &:nth-child(4n-1) {
          @include screen(mobile) {
            margin-top: max(-37%, rem($min-height166px * -1));
          }
          #{$list}__item-group {
            align-items: flex-end;
            @include screen(web) {
              align-items: center;
            }
          }
        }
      }
      &__item-group {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
        gap: rem($margin24px $margin10px);
        @include screen(web) {
          gap: rem($margin40px $margin20px);
        }
      }
      &__item {
        flex-basis: calc(50% - rem($margin10px * 0.5));
        @include screen(web) {
          flex-basis: calc(50% - rem($margin20px * 0.5));
        }
        // max-width: calc(50% - rem($margin20px * 0.5));
        // min-width: calc(50% - rem($margin20px * 0.5));
        &.repeat-order6,
        &.repeat-order8 {
          @include screen(mobile) {
            position: relative;
            z-index: 1;
          }
        }
        &.repeat-order3,
        &.repeat-order9 {
          min-width: 100%;
        }
        &.repeat-order7 {
          @include screen(mobile) {
            padding-bottom: min(6%, rem($padding30px));
          }
        }
      }
      &__thumbnail {
        @at-root #{$component}.type2 {
          @each $i, $h in $image-map {
            $selector: '#{$list}__item.repeat-order#{$i} #{$list}__thumbnail';
            #{$selector}:before {
              @if $i == 3 or $i == 9 {
                padding-bottom: calc($h / 890 * 100%);
              } @else {
                padding-bottom: calc($h / 435 * 100%);
              }
            }
          }
        }
      }
    }
    #{$list} + #{$list} {
      margin-top: rem($margin30px);
      @include screen(web) {
        margin-top: rem($margin40px);
      }
    }
  }
  &.type3 {
    > .component > .cmp-container {
      @include screen(web) {
        @include container($max-width1800px, true);
      }
    }
    #{$list} {
      display: grid;
      gap: rem($margin1px $margin10px);
      grid-template-columns: repeat(2, 1fr);
      grid-auto-rows: rem($margin1px);
      @include screen(web) {
        column-gap: ($margin20px);
        grid-template-columns: repeat(4, 1fr);
      }

      // for initialize
      &.preset {
        grid-auto-rows: rem($margin1px * 1000 * 0.5);
        @include screen(web) {
          grid-auto-rows: rem($margin1px * 1000);
        }
      }

      #{$list}__item:not(:last-of-type) .c-explore-list__item-container {
        padding-bottom: rem($margin30px);
        @include screen(web) {
          padding-bottom: rem($margin40px);
        }
      }
    }
  }
}
