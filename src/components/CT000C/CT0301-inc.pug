mixin checkoutStepItem(params)
    span.sr-only Input completed
    h4.c-checkout-step__title= params.title
    if params.type === 'checked'
        +button({type:"text", color:"black", size:"small", underline: true, name: "Edit"})(class="c-checkout-step__edit")
        //- div.c-checkout-step__box
        //-     button.c-checkout-step__edit(type='button')
        //-         span.sr-only edit

    else
        div.c-checkout-step__box
            span.c-checkout-step__txt STEP
            span.c-checkout-step__current= params.current
            span.c-checkout-step__total= `/ ${params.total}` 

mixin checkoutStep(params)
    case params.type
        when "active"
            .c-checkout-step(class=params.type)
                +checkoutStepItem(params)
        when "checked"
            .c-checkout-step(class=params.type)
                +checkoutStepItem(params)
        default
            .c-checkout-step
                +checkoutStepItem(params)

mixin myMsg({infoText= false, correct= false, warning= false, check= false, warningFirst, infoTextSecond})
    if warningFirst
        - for(var i=0; i < warningFirst.length; i++)
            +invalid-warning(warningFirst[i])
    if correct
        - for(var i=0; i < correct.length; i++)
            +valid-msg(correct[i])
    if infoText
        ul.my-input__info 
            li.font-w-normal-14.font-m-normal-14!= infoText
    if warning !==  []
        - for(var i=0; i < warning.length; i++)
            +invalid-warning(warning[i])
    if check
        - for(var i=0; i < check.length; i++)
            +formCheckbox(check[i], "name", "val1", `checkId${i}`, count="false", false)
    if infoTextSecond
        ul.my-input__info 
            li.font-w-normal-14.font-m-normal-14= infoTextSecond

mixin mySelect({optionVal=false, warning=false, label='', id='', infoText= false, placeholder='', warn=false, selected})
    .c-search-box__form(class=`${warning ? 'my-warn' : ''}`)
        +formSelect(label, id, placeholder, false)
            if optionVal
                - for(var i=0; i < optionVal.length; i++)
                    if selected === i + 1
                        option(value="" selected)= optionVal[i]
                    else
                        option(value="")= optionVal[i]
        if warning || infoText
            +myMsg({warning: warning, infoText: infoText})

mixin myFormText(params)
    - let data = {...params}
    - let config = `${data.warning || data.warningFirst && !data.correct ? 'my-warn' : ''}`
    - let typeInput = `${data.typeInput ? data.typeInput : ''}`
    - let valConfig = `${data.value ? data.value : ''}`
    if data.type === 'select'
        +mySelect({optionVal: data.optionVal, warning: data.warning, label: data.label, id: data.id, infoText: data.infoText, placeholder: data.placeholder, warn: data.warn, selected: data.selected})
    else
        .c-input-item(class=`${data.active ? 'active' : ''}`)
            if data.cancel
                .buy-member-edit__button-container
                    label.font-w-normal-20.font-m-normal-20(for= data.id class=`${data.info ? 'my-info' : ''}`)= data.label
                    +button({type: "text", name: "Cancel", underline: true, size: "small"})
            else if !data.cancel && data.label
                label.font-w-semibold-14.font-m-semibold-14(for= data.id class=`${data.info ? 'my-info' : ''}`)= data.label
            if data.required
                input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config, required)&attributes(attributes)
            else if data.readonly
                input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config, readonly)&attributes(attributes)
            else if data.disabled
                input(type= data.type id= data.id placeholder= data.placeholder data-placeholder=data.placeholder class=config, disabled)&attributes(attributes)
            else if data.type === 'textarea'
                if data.limit
                    .my-textarea__container
                        textarea(id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder class='my-textarea--limit')&attributes(attributes)
                        .my-count
                            span.font-w-normal-14.font-m-normal-12 0 / !{data.limit} byte
                else 
                    textarea(id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder)&attributes(attributes)
            else if data.button
                if data.validation
                    .input-button__container.input-button__container--validation
                        .my-button-validation
                            if data.cancel
                                .input-container
                                    input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder class=config)&attributes(attributes)
                            +myMsg({correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
                        .button.c-cta.button-full
                            if !data.buttonDisabled
                                +defaultButton({name:data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: true})
                            else 
                                +defaultButton({name:data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: true})(disabled='disabled')
                else
                    .input-button__container
                        if data.aria
                            input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder, class=([config, typeInput]), value=valConfig, aria-labelledby= data.labelledby)&attributes(attributes)
                        else
                            input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder, class=([config, typeInput]), value=valConfig)&attributes(attributes)
                        .button.c-cta.button-full
                            if !data.buttonDisabled
                                +defaultButton({name:data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: true})(aria-describedby='validation-id 연결')
                            else 
                                +defaultButton({name:data.button, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: true})(disabled='disabled')
            else 
                if data.active
                    input(type='text' id= data.id placeholder= data.placeholder data-placeholder= data.placeholder class=`my-input__password ${config}` value= data.value)&attributes(attributes)
                    if data.type === 'password'
                        button(type='button' class='my-form__eye')
                            span.sr-only show password
                    else if data.search 
                        button(type='button' class='my-form__search__icon')
                            span.sr-only search
                else
                    input(type= data.type id= data.id, placeholder= data.placeholder data-placeholder= data.placeholder, value= data.value class=`my-input__password ${config}` class=`${data.search ? 'my-form__search' : ''}`,)&attributes(attributes)
                    if data.type === 'password'
                        button(type='button' class='my-form__eye')
                            span.sr-only show password
                    else if data.search 
                        button(type='button' class='my-form__search__icon')
                            span.sr-only search
        if !data.validation 
            +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond, correct: data.correct, warning: data.warning, check: data.check, warningFirst: data.warningFirst})
        else
            +myMsg({infoText: data.infoText, infoTextSecond: data.infoTextSecond})
                
mixin myInputForm(data)
    .my-input
        ul
            each set in data
                li
                    +myFormText(set)

mixin buyMemberId(params)
    - let data = {...params}
    .buy-member-id
        .buy-member-id__ico
            .font-w-normal-24.font-m-normal-16= data.id
        +button({type:"text", color:"black", size:"small", underline: true, name: "Edit"})
            

mixin buyMemberIdEdit(params)
    - let data = {...params}
    .buy-member-edit
        +myInputForm([
            {
                type:"email",
                id:"email",
                label:"Order Email",
                cancel: true,
                required:false,
                placeholder:data.id,
                warning: ['Email account address invaild.', 'Email is required.'],
                button: 'Save',
                validation: true,
                buttonDisabled: false
            },
        ])

mixin buyCouponRegister(params)
    - let data = {...params}
        .buy-order-info-coupon__apply
            .label.sr-only(id=`coupon-register-${data.id}`) Register Promo Code
            +myInputForm([
                {
                    type:"text",
                    id:`promoCode${data.id}`,
                    required:false,
                    placeholder:"Enter Secret Code",
                    button: 'Apply',
                    buttonDisabled: data.btnDisabled ? true : false,
                    aria : true,
                    labelledby:`coupon-register-${data.id}`,
                    typeInput: data.typeInput ? `${data.typeInput}` : null,
                    value: data.value ? `${data.value}` : null,
                },
            ])

mixin buyCouponCheckbox(label, name, val, id, count = "false", disabled = false, date, duplicate)
    .c-checkbox-item.buy-coupon-item
        label.checkbox(for=`${id}`)
            if(disabled)
                input(type="checkbox", name=`${name}`, value=`${val}`, id=`${id}`, disabled="disabled")&attributes(attributes)
            else 
                input(type="checkbox", name=`${name}`, value=`${val}`, id=`${id}`)&attributes(attributes)

            if(label)
                span.label
                    span.c-text-contents
                        span.text.c-text-contents__bodycopy
                            span.cmp-text.font-w-normal-16.font-m-normal-16.buy-select-coupon__label(data-cmp-data-layer="")!= label
                            span.cmp-text.font-w-normal-14.font-m-normal-12.buy-select-coupon__date(data-cmp-data-layer="")= date
                                //- [Start] 2023-04-11 : REMOVE - duplicate option
                                //- if(duplicate)
                                //-     span.cmp-text.font-w-normal-14.font-m-normal-12.font-red.buy-select-coupon__duplicate(data-cmp-data-layer="") Duplicate
                                //- [End] 2023-04-11 : REMOVE - duplicate option
                    -if(count >= 0 & count != "false") // for filter
                        sup.count= count 
            else 
                if block 
                    span.label
                        block

mixin buyCouponSelect(coupon, params)
    - let data = {...params}
    .c-accordion.js-accordion
        .c-accordion__box.js-accordion-handle-target
            .c-accordion__head
                // block - text contents
                .c-accordion__head-text.c-text-contents
                    span.c-accordion__initial.buy-order-items__head.font-w-normal-16.font-m-normal-16(aria-hidden="true") Select Coupon (
                        //- [Start] 2023-04-11 : UPDATE - Change coupon text to numbers
                        if coupon
                            //- strong You have !{coupon} coupons
                            strong !{coupon}
                        else 
                            //- span No Coupon Owned
                            span 0
                        |)
                        //- [End] 2023-04-11 : UPDATE - Change coupon text to numbers
                .button
                    button.cmp-button.c-accordion__button.js-accordion-trigger(aria-expanded="false" aria-controls=`buy-coupon-select${!coupon ? "-no-coupon" : ""}`)
                        span.c-accordion__button-text.sr-only Select Coupon
            .c-accordion__body(id=`buy-coupon-select${!coupon ? "-no-coupon" : ""}`)
                if coupon
                    .c-text-contents.c-accordion__body-text
                        .buy-coupon-select.buy-select-coupon
                            each set in data
                                .title.c-text-contents__title
                                    span.cmp-title.font-w-normal-16.font-m-normal-14(data-cmp-data-layer="")= set.title
                                - for (var i=0; i < set.couponTitle.length; i++)
                                    //- [Start] 2023-04-11 : UPDATE - remove duplicate option
                                    //- +buyCouponCheckbox(set.couponTitle[i], "name", set.val[i], set.id[i], count="false", false, set.date[i], set.duplicate[i])
                                    +buyCouponCheckbox(set.couponTitle[i], "name", set.val[i], set.id[i], count="false", false, set.date[i])
                                    //- [End] 2023-04-11 : UPDATE - remove duplicate option

mixin applyCoupon(params)
    .buy-apply-coupon
        p.buy-apply-coupon__title Applied Coupons
        p.buy-apply-coupon__coupon= params.coupon

mixin CT0301(option=false)
    .CT0301
        .buy-checkout__item.buy-checkout__item--id(style="display:block;")
            +buyMemberId({
                id:"abced123@gmail.com"
            })
            +orderSummary({id:'bbbbbb'})
        .buy-checkout__item.buy-checkout__item--id.buy-checkout__item--complete(style="display:none")
            +buyMemberIdEdit({
                id:"abced123@gmail.com"
            })
        .buy-checkout__item.buy-checkout__item--coupon(style="display:block;")
            +checkoutStep({
                title:"Coupon",
                current:"1",
                total:"3",
                type: "active",
            })
            .buy-order-info-coupon
                ul.buy-order-info-coupon__list
                    li
                        +buyCouponRegister({
                            id: "1",
                            btnDisabled : true,
                        })
                    li
                        .buy-order-info-coupon__item
                            +buyCouponSelect(false,[])
            .buy-order-info-coupon
                ul.buy-order-info-coupon__list
                    li
                        +buyCouponRegister({
                            id: "2",
                            btnDisabled : false,
                        })
                        +toastPopup([
                            {
                                type: "error",
                                text: '"HA_SAVE15" is a code that is not available on the product or is not valid.',
                                remove: true
                            },
                        ], 'aria-validation-0')
                    li
                        .buy-order-info-coupon__item
                            //- [Start] 2023-04-11 : UPDATE - duplicate option
                            +buyCouponSelect(3,[
                                {
                                    title:"For Your Cart",
                                    couponTitle:["10% off Sign-up Welcome Coupon"],
                                    val:["val1"],
                                    id:["selectCouponCheck1"],
                                    date:["Expires Jan 31, 2023"],
                                },
                                {
                                    title:"For Your Product",
                                    couponTitle:["10% off LG Home Appliances <br/>(Buy Any 2)","£100 off OLED Promotion <br/>(for Selected Model)"],
                                    val:["val2", "val3"],
                                    id:["selectCouponCheck2", "selectCouponCheck3"],
                                    date:["Expires Jan 31, 2023","Expires Jan 31, 2023"],
                                },
                            ])
                            //- [End] 2023-04-11 : UPDATE - duplicate option
                        +toastPopup([
                            {
                                type: "error",
                                text: 'This price has exceeded the Maximum DC Rate',
                                remove: true
                            },
                            {
                                type: "success",
                                text: 'Promocode registered. Check the coupon.',
                                remove: true
                            },
                        ], 'aria-validation-1')   
            //- Secret Coupon add
            .buy-order-info-coupon
                ul.buy-order-info-coupon__list
                    li
                        +buyCouponRegister({
                            id: "3",
                            btnDisabled : false,
                            typeInput : 'var-red',
                            value : 'BF_Secret_xyz1'
                        })
                        .buy-order-info-coupon__secret
                            p.font-w-normal-16.font-m-normal-14 Your secret coupon is available for only today.
                            +textButton({name: 'Terms & Condition', underline:true, wSize: 'medium', mSize: 'medium', buttonStyle: 'default', isButton: false, buttonStyle:"js-pop-open"})(href="#popSecretCoupon")
                            
                    li
                        .buy-order-info-coupon__item
                            //- [Start] 2023-04-11 : UPDATE - duplicate option
                            +buyCouponSelect(1,[
                                {
                                    title:"For Your Cart",
                                    couponTitle:["10% off Sign-up Welcome Coupon"],
                                    val:["val1"],
                                    id:["selectCouponCheck4"],
                                    date:["Expires Jan 31, 2023"],
                                }
                            ])
                            //- [End] 2023-04-11 : UPDATE - duplicate option
                        +toastPopup([
                            {
                                type: "error",
                                text: 'This price has exceeded the Maximum DC Rate',
                                remove: true
                            },
                            {
                                type: "success",
                                text: 'Promocode registered. Check the coupon.',
                                remove: true
                            },
                        ], 'aria-validation-3')
                .button.buy-order-info-coupon__button
                    //- [Start] 2023-04-07 : UPDATE - button name change Proceed to Next to Proceed to Delivery
                    //- +defaultButton({name: 'Proceed to Delivery', wSize: 'medium', mSize: 'medium', buttonStyle: 'highlight', isButton: true})(class="next")
                    //- [End] 2023-04-07 : UPDATE - button name change Proceed to Next to Proceed to Delivery

                    //- [Start] 2023-04-11 : UPDATE - button name change 'Proceed to Delivery' to 'Next'
                    +defaultButton({name: 'Next', wSize: 'medium', mSize: 'medium', buttonStyle: 'highlight', isButton: true})(class="next")
                    //- [End] 2023-04-11 : UPDATE - button name change 'Proceed to Delivery' to 'Next'
            

        .buy-checkout__item.buy-checkout__item--coupon.buy-checkout__item--complete(style="display:none")
            +checkoutStep({
                title:"Coupon",
                current:"1",
                total:"3",
                type: "checked",
            })
            .apply-coupon.apply-coupon--complete
                +applyCoupon(
                    {
                        coupon:"10% off Sign-up welcome coupon",
                    },
                )