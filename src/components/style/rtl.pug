extends ../_common/_layout.pug
include ../_common/_button.pug
include ../_common/_pagination.pug

block meta 
    - var componentName = "RTL"
    - var description = "description text"
    - var keywords = "keyword list"
    title #{componentName}
    meta(name="description" content=description)
    meta(name="keywords" content=keywords)

block styles
    //- link(rel="stylesheet", href=componentId+".css")

block scripts
    //- script(src=componentId+".js" type="module")

block content

    #contents.guide-page
        h1 LG GP1 HTML RTL Guide
        p(style='max-width: 800px; padding: 30px 20px 20px; margin: 0 auto;text-align:center;')
            | HTML and CSS for RTL are automatically generated by Gulp.
        //- p(style='max-width: 800px; padding: 30px 20px 20px; margin: 0 auto;text-align:center;')
        //-     | RTL CSS는  
        //-     a(href="https://www.npmjs.com/package/gulp-rtlcss" target="_blank" style="text-decoration:underline;") gulp-rtlcss
        //-     | 를, 
        //-     | RTL HTML은
        //-     a(href="https://www.npmjs.com/package/gulp-replace" target="_blank" style="text-decoration:underline;") gulp-replace
        //-     | 를 활용하여 자동으로 생성됩니다. 
        style 
            | .guide-page ul li {padding-bottom: 15px;}
        ul(style='max-width: 800px; margin: 0 auto; padding: 30px 0 0 0;')
            li  After Gulp converts the html and css files into the dist folder using pug and scss,
                span(style="display: inline-block; padding:0 0 0 20px;")
                    | create RTL files using compiled HTML and CSS files.
            li   
                strong(style="font-weight: bold;") SCSS changes for RTL
                div(style="padding:5px 0 0 20px;")
                    | If you need to modify the style for an RTL page, please use the following:
                    div(style="padding:5px 0 0 0;")
                        p - When variables are not used
                        code(style="display: block; background: #f6f6f6; padding: 10px; margin: 5px 0; font-family: monospace; font-size: 14px;") .selector {color: $black; transform: 
                            span(style="color:green; font-weight: bold; font-style: italic") #&#123;'/*!rtl:rotate(0)*/'}
                            |  rotate($degree180);} 
                            br
                            | .selector {color: $black; transform: rotate($degree180) 
                            span(style="color:green; font-weight: bold; font-style: italic") #&#123;'/*!rtl:rotate(0)*/'}
                            | ; 
                            span(style="color:green; font-weight: bold; font-style: italic") /* RTL last keep semicolon */
                            | } 
                        p - When using variables
                        code(style="display: block; background: #f6f6f6; padding: 10px; margin: 5px 0; font-family: monospace; font-size: 14px;") .selector {color: $black; transform: 
                            span(style="color:green; font-weight: bold; font-style: italic") #&#123;'/*!rtl:rotate(#&#123;$degree180})*/'} 
                            | rotate(0);} 
                            br
                            | .selector {color: $black; transform: rotate(0) 
                            span(style="color:green; font-weight: bold; font-style: italic") #&#123;'/*!rtl:rotate(#&#123;$degree180})*/'}
                            | ; 
                            span(style="color:green; font-weight: bold; font-style: italic") /* RTL last keep semicolon */
                            | } 
                        p * You can put a comment for RTL after the value, but it may fail because the final semicolon is deleted.
                        p(style="padding:0 0 0 12px;") To prevent this, place a comment for RTL before the value or add any comment after the last semicolon.
            li 
                strong(style="font-weight: bold;") Ignore 
                div(style="padding:5px 0 0 20px;")
                    | If you do not want to change the left and right sides when converting CSS for RTL, you can add an ignore comment as follows.
                
                    code(style="display: block; background: #f6f6f6; padding: 10px; margin: 5px 0; font-family: monospace; font-size: 14px;")
                        | .selector {
                        br
                        | &nbsp;&nbsp; /*!rtl:ignore*/
                        br
                        | &nbsp;&nbsp; text-align: right;
                        br
                        | } 
                    

