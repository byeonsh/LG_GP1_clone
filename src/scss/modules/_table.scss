@use '../abstract/' as *;

@mixin table() {
  // table
  .c-table {
    width: 100%;
    overflow: auto;
    border-top: rem($border1) solid $mid-gray1;
    border-bottom: rem($border1) solid $mid-gray1;
    -webkit-overflow-scrolling: touch;
    max-height: calc(50vh);
    @include screen(web) {
      max-height: initial;
      overflow-y: hidden;
    }
    a {
      text-decoration: underline;
    }
    table {
      width: 100%;
      table-layout: auto;
      margin-top: 0;
      color: $gray3;
      min-width: 100%;
      border-collapse: collapse;
      border-spacing: 0;
      border: 0;
      a {
        color: $gray3;
      }
    }
    caption {
      border: 0;
      clip: rect(0, 0, 0, 0);
      height: rem(1px);
      margin: rem(-1px);
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: rem(1px);
    }
    // &__tr {
    //     border-top: 1px solid $graye6;
    // }
    th,
    td {
      border: 0;
      padding: rem($padding14px) rem($padding20px);
      // width: 50%;
      min-width: rem(calc(($minimum - $block-margin-m * 2) / 2));
      border-bottom: rem($border1) solid $mid-gray1;
      @include screen(web) {
        min-width: rem($max-width256px);
        padding: rem($padding14px) rem($padding40px);
      }
    }
    th {
      background-color: $light-gray3;
      font-weight: $font-regular;
      font-size: rem(16px);
      line-height: rem(18px);
      // for sticky
      position: sticky;
      left: 0;
      top: 0;
      z-index: 2;
      color: $black;
      @include screen(web) {
        font-size: rem(24px);
        line-height: rem(28px);
        padding: rem($padding14px) rem($padding24px);
      }
      &:after {
        content: '';
        position: absolute;
        left: 0;
        width: 100%;
        bottom: rem($border1) * -1;
        height: 1px;
        background: $mid-gray1;
      }
      &.fixed {
        // If the table header exists in both directions,
        // inserting the fixed class into the cell (1,1) in the editor fixes the cell.
        z-index: 3;
      }
    }
    // th[scope='row'] {
    //     position: sticky;
    //     left: 0;
    //     z-index: 2;
    // }
    // th[scope='col'] {
    //     position: sticky;
    //     top: 0;
    //     z-index: 2;
    // }
    td {
      font-weight: $font-regular;
      font-size: rem(16px);
      line-height: rem(18px);
      @include screen(web) {
        line-height: rem(20px);
      }
    }
    tbody tr:last-child {
      th,
      td {
        border-bottom: 0;
      }
    }
  }
  // [Start] LGCOMMON-1710
  // :: Class name follows the desktop view.
  .cell-w-auto,
  .cell-w-100,
  .cell-w-150,
  .cell-w-200 {
    .c-table {
      th,
      td {
        padding: rem(14px) rem(6px) !important;
        @include screen(web) {
          padding: rem(14px) rem(10px) !important;
        }
      }
    }
  }
  .cell-w-auto {
    .c-table {
      th,
      td {
        min-width: auto !important;
      }
    }
  }
  .cell-w-100 {
    .c-table {
      th,
      td {
        min-width: rem(50px) !important;
        @include screen(web) {
          min-width: rem(100px) !important;
        }
      }
    }
  }
  .cell-w-150 {
    .c-table {
      th,
      td {
        min-width: rem(75px) !important;
        @include screen(web) {
          min-width: rem(150px) !important;
        }
      }
    }
  }
  .cell-w-200 {
    .c-table {
      th,
      td {
        min-width: rem(100px) !important;
        @include screen(web) {
          min-width: rem(200px) !important;
        }
      }
    }
  }
  // [End] LGCOMMON-1710
}
