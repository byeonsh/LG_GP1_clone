@use 'sass:map';
@use '../abstract/' as *;

@mixin media {
  // fix for AEM preview mode where video model goes bottom of screen
  .aem-AuthorLayer-Preview .c-media-dialog__container {
    margin: 0 auto !important;
  }
  .c-media {
    display: flex;
    &:not(.button) {
      flex-direction: column;
      width: 100%;
      height: 100%;
    }
    // element
    &__container {
      display: flex;
      justify-content: center;
      overflow: hidden;
      height: 100%;
    }
    &__video {
      // max-width:100%;
      max-height: 100%;
      opacity: 0;
      // modifier
      &--loaded {
        opacity: 1;
        transition: opacity $animation-duration map.get($loading-staying, long);
      }
    }
    &__controls {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      justify-content: center;
    }
    &__button {
      color: inherit;
      cursor: pointer;
      border: none;
      background: none;
      text-decoration: none;
      padding: 0;
      // icon
      $icon: '&:before';
      #{$icon} {
        content: '';
        display: block;
        width: rem($icon24px);
        height: rem($icon24px);
        @include screen(web) {
          width: rem($icon32px);
          height: rem($icon32px);
        }
        background: {
          repeat: no-repeat;
          size: 100% auto;
          position: 50% 50%;
          color: transparent;
        }
      }
      // variation
      &--large {
        #{$icon} {
          border-radius: $radius-full;
          width: rem($icon48px);
          height: rem($icon48px);
          @include screen(web) {
            width: rem($icon60px);
            height: rem($icon60px);
          }
        }
      }
      &--play {
        #{$icon} {
          background-image: url($icon-play-black-32-32);
        }
        &[class*='--large'] {
          #{$icon} {
            background-image: url($icon-play-black-60-60);
          }
        }
      }
      &--pause {
        #{$icon} {
          background-image: url($icon-pause-black-32-32);
        }
        &[class*='--large'] {
          #{$icon} {
            background-image: url($icon-pause-black-60-60);
          }
        }
      }
      &--mute {
        #{$icon} {
          background-image: url($icon-sound-on-32-32);
        }
        &[class*='--large'] {
          #{$icon} {
            background-image: url($icon-sound-on-60-60);
          }
        }
      }
      &--unmute {
        #{$icon} {
          background-image: url($icon-sound-off-32-32);
        }
        &[class*='--large'] {
          #{$icon} {
            background-image: url($icon-sound-off-60-60);
          }
        }
      }
      &:disabled,
      &[disabled] {
        display: none;
      }
      &--only {
        display: inline-flex;
        align-items: center;
      }
      &-text {
        text-decoration: underline;
        margin-left: rem($margin8px);
      }
      &:focus-visible {
        outline: none;
        &::before {
          outline: rem(2px) solid yellow;
          outline-offset: rem(2px);
          border-radius: 50%;
        }
      }
    }
    &__titlecopy {
      position: absolute;
      bottom: 0;
      width: 100%;
      color: $white;
      text-align: left;
      background-color: rgba($black, 0.7);
      padding: rem($padding8px $padding16px);
      z-index: $z-index1;
      @include screen(web) {
        padding: rem($padding12px $padding24px);
      }
      * {
        overflow: hidden;
        height: calc(14em / 12);
        @include screen(web) {
          height: calc(20em / 16);
        }
      }
    }
    // modifier
    &--floating {
      .c-media__button {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        // load animation
        opacity: 0;
        animation: fade-in 0.7s 0.3s forwards;
      }
    }
  }
  .c-render-video {
    position: relative;
    height: 100%;
    background : {
      color: rgba($black, 0.6);
    }
    video,
    iframe {
      width: 100%;
      height: 100%;
    }
    &__close-button {
      position: absolute;
      top: rem($margin10px);
      right: rem($margin10px);
      width: rem($width24px);
      height: rem($height24px);
    }
    // variation
    &.shown {
      z-index: 3;
    }
  }
  .brightcove-player {
    width: auto;
    margin-left: auto;
    margin-right: auto;
    height: 100%;
  }
  .c-media-dialog {
    position: fixed;
    z-index: $stacking-ceil;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    row-gap: rem($padding10px);
    flex-direction: column;
    align-items: flex-end;
    &__dimmed {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba($black, 0.8);
    }
    &__container {
      position: relative;
      max-width: calc(rem($tablet + $width1px));
      width: 100%;
      margin: auto;
      @include screen(web) {
        height: 100%;
        max-height: rem($max-height720px);
      }
      @include screen(mobile) {
        padding-bottom: calc(100% * 720 / 1280);
        > * {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
        }
      }
    }
    &__close-button {
      cursor: pointer;
      position: absolute;
      top: 0;
      right: 0 #{'/*!rtl:auto*/'};
      left: auto #{'/*!rtl:0*/'};
      z-index: inherit;
      color: $white;
      // order: -1;
      display: flex;
      justify-content: center;
      align-items: center;
      background: none;
      border: none;
      padding: 0;
      margin-right: rem($margin19px);
      margin-top: rem($margin19px);
      width: rem($width30px);
      height: rem($height30px);
      min-width: rem($min-width30px);
      min-height: rem($min-height30px);
      @include screen(web) {
        width: rem($icon56px);
        height: rem($icon56px);
        min-width: rem($icon56px);
        min-height: rem($icon56px);
        margin-right: rem($margin32px);
        margin-top: rem($margin32px);
      }
      &:before,
      &:after {
        content: '';
        width: 100%;
        height: rem($border1);
        background-color: $white;
      }
      &:before {
        transform: rotate($degree45);
        margin-right: -50%;
      }
      &:after {
        transform: rotate(-$degree45);
        margin-left: -50%;
      }
      &:focus-visible {
        outline-color: $white;
      }
    }
    &__video {
      width: 100%;
      @include screen(mobile) {
        height: auto;
      }
    }
  }
}
