@use '../abstract/' as *;

@mixin title-area {
  $block: '.c-region-header';
  .c-region-header {
    min-height: rem(32px);
    @include screen(web) {
      min-height: rem(60px);
    }
    // element
    &__container {
      // useable text-align
      // ...
      // variation
      &.align-center,
      &.align-left,
      &.align-right {
        display: flex;
        flex-direction: column;
        justify-content: initial;
      }
      &.align-center {
        align-items: center;
      }
      &.align-left {
        align-items: flex-start;
      }
      &.align-right {
        align-items: flex-end;
      }
    }
    &__complementary-area {
      // container for non-text contents... such as button.
      // ...
    }
    &__text {
      > * {
        display: block;
      }
      .cmp-text {
        text-align: #{'/*!rtl:right*/'}; /*! 230512 RTL */
      }
    }
    &__headline {
      display: flex;
      align-items: center;
      text-align: #{'/*!rtl:right*/'}; /*! 230512 RTL */
    }
    &__headline + #{$block}__text {
      margin-top: rem($margin8px);
    }
    // modifier
    &--justify-w {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      row-gap: rem($margin12px);
      @include screen(web) {
        flex-direction: row; /* 230512 RTL */
        justify-content: space-between;
        align-items: center;
        column-gap: rem($gutter-w);
      }
      #{$block}__complementary-area {
        // flex-shrink: 0;
        display: flex;
        justify-content: flex-end;
        flex: 1;
      }
    }
    // use this classname when pull up button on right side
    &--vacate-side {
      // padding value from carousel handler width
      #{$block}__container {
        padding-right: rem($width90px);
        @include screen(web) {
          padding-right: rem($width200px);
        }
      }
    }

    &--auto-height {
      min-height: auto;
    }
  }
}
